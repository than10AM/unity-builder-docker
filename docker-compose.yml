services:
  imagebuild:
    image: unity6
    build:
      context: .
      dockerfile: ./unity6
    ports:
      - 3000:3000
    volumes:
      - ./unity_editors:/opt/unity
      - ./unity_cache:/root/.config/Unity\ Hub
      - /tmp/.X11-unix:/tmp/.X11-unix
      - git_credentials_vol:/root/.git-credentials 
    environment:
      - DISPLAY=:99
    env_file:
      - .env
    
  unity_install:
    image: unity6 # Use the same image that has unityhub and dependencies
    depends_on:
      imagebuild: # Ensures the image is built before this service runs
        condition: service_started # Or service_completed_successfully if imagebuild is a short-lived task
    volumes:
      - ./unity_editors:/opt/unity # Unity editors will be installed here
      - ./unity_cache:/root/.config/Unity Hub # Unity Hub configuration
      - /tmp/.X11-unix:/tmp/.X11-unix # For Xvfb if needed by the script
      - ./install_unity.sh:/install_unity.sh # Mount the install script
    environment:
      - DISPLAY=:99 # Required by install_unity.sh
    env_file:
      - .env # If your install script needs any env vars from .env
    command: >
      bash -c "
        echo 'Making install_unity.sh executable...' && \
        chmod +x /install_unity.sh && \
        echo 'Running Unity Install script (install_unity.sh)...' && \
        /install_unity.sh && \
        INSTALL_EXIT_CODE=$$? && \
        echo 'Unity Install script finished with exit code: ' $$INSTALL_EXIT_CODE && \
        if [ $$INSTALL_EXIT_CODE -ne 0 ]; then exit $$INSTALL_EXIT_CODE; fi && \
        echo 'Unity installation process complete. Editors should be in ./unity_editors on the host.' && \
        # Keep the container running for a bit if needed for inspection, or just exit.
        # For a one-off install, it's fine to exit.
        # If you want to check logs or state, you might add a 'sleep infinity' here
        # and then manually stop the container.
        exit 0
      "    
  
  gitclone:
    image: unity6
    platform: linux/amd64
    volumes:
      - ./unity_editors:/opt/unity
      - ./unity_cache:/root/.config/Unity\ Hub
      - /tmp/.X11-unix:/tmp/.X11-unix
      - git_credentials_vol:/root/.git-credentials 
      - project_data_vol:/project_data # Mount the named volume for project data
    environment:
      - DISPLAY=:99
    env_file:
      - .env
    command: >
      bash -c "
        export GIT_TERMINAL_PROMPT=0 && \
        /auth_git.sh && \
        echo 'Attempting to clone repository...' && \
        git clone https://github.com/than10AM/TilutRabbitRun2.git /project_data && \
        echo 'Git clone completed successfully.' || (echo 'Git clone FAILED' >&2 && exit 1)
      "
  generate_license:
    image: unity6
    volumes:
      - ./unity_editors:/opt/unity # Unity editors location
      - ./unity_cache:/root/.config/Unity Hub # Unity Hub configuration
      - /tmp/.X11-unix:/tmp/.X11-unix # For Xvfb if needed
      - ./license_files:/license_files # Where the .alf file will be saved
      - ./unity_generate_license.sh:/unity_generate_license.sh # Mount the license generation script
    environment:
      - DISPLAY=:99
    env_file:
      - .env
    command: >
      bash -c "
        echo 'Making unity_generate_license.sh executable...' && \
        chmod +x /unity_generate_license.sh && \
        echo 'Running Unity License Generator script...' && \
        /unity_generate_license.sh && \
        LICENSE_EXIT_CODE=$$? && \
        echo 'License generation script finished with exit code: ' $$LICENSE_EXIT_CODE && \
        if [ $$LICENSE_EXIT_CODE -ne 0 ]; then exit $$LICENSE_EXIT_CODE; fi && \
        echo 'License generation complete. The .alf file should be in ./license_files on the host.'
      "
  unitybuild_project:
    image: unity6
    volumes:
      - ./unity_editors:/opt/unity
      - ./unity_cache:/root/.config/Unity\ Hub
      - /tmp/.X11-unix:/tmp/.X11-unix
      - project_data_vol:/project_data # Mount the named volume for project data
    environment:
      - DISPLAY=:99
    env_file:
      - .env
    command: >
      bash -c "
        echo 'Starting Xvfb for Unity Build...' && \
        Xvfb :99 -screen 0 1024x768x24 & \
        XVFB_PID=$$! && \
        sleep 5 && \
        echo 'Running Unity Build script...' && \
        /unity_build.sh \"$$UNITY_USERNAME\" \"$$UNITY_PASSWORD\" /project_data /project_data/Builds/Windows/MyGame.exe && \
        BUILD_EXIT_CODE=$$? && \
        echo 'Stopping Xvfb...' && \
        kill $$XVFB_PID && \
        exit $$BUILD_EXIT_CODE
      "

volumes:
  git_credentials_vol: # Define the named volume to share git credentials
  project_data_vol: # Define the named volume for the cloned project data